"===========================
"VUNDLE - vim Plugin manager
"===========================


        set nocompatible              " be iMproved, required
        filetype off                  " required

        " set the runtime path to include Vundle and initialize
        set rtp+=~/.vim/bundle/Vundle.vim
        call vundle#begin()
        " alternatively, pass a path where Vundle should install plugins
        "call vundle#begin('~/some/path/here')

        " let Vundle manage Vundle, required
        Plugin 'VundleVim/Vundle.vim'               "vundle - vim plugin manager

        Plugin 'scrooloose/nerdcommenter'           "sexy commenting

        Plugin 'Yggdroot/indentLine'                "indentation lines for loops 

        Plugin 'scrooloose/nerdtree'                "file tree

        Plugin 'Valloric/YouCompleteMe'             "auto completion

        Plugin 'jiangMiao/auto-pairs'               "autocomplete parentheses

        "Plugin 'tmhedberg/SimpylFold'               "folding plugin

        Plugin 'Konfekt/FastFold'                   "fasten up folding/when writing


        "" The following are examples of different formats supported.
        "" Keep Plugin commands between vundle#begin/end.

        "" plugin on GitHub repo
        "Plugin 'tpope/vim-fugitive'

        "" plugin from http://vim-scripts.org/vim/scripts.html
        "Plugin 'L9'

        "" Git plugin not hosted on GitHub
        "Plugin 'git://git.wincent.com/command-t.git'

        "" git repos on your local machine (i.e. when working on your own plugin)
        "Plugin 'file:///home/gmarik/path/to/plugin'

        "" The sparkup vim script is in a subdirectory of this repo called vim.
        "" Pass the path to set the runtimepath properly.
        "Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

        "" Install L9 and avoid a Naming conflict if you've already installed a
        "" different version somewhere else.
        "Plugin 'ascenator/L9', {'name': 'newL9'}

        "" All of your Plugins must be added before the following line
        call vundle#end()            " required
        filetype plugin indent on    " required



        " To ignore plugin indent changes, instead use:
        "filetype plugin on
        "
        " Brief help
        " :PluginList       - lists configured plugins
        " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
        " :PluginSearch foo - searches for foo; append `!` to refresh local cache
        " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
        "
        " see :h vundle for more details or wiki for FAQ






"==================
" === NERDCOMMENTER
"==================

        let mapleader = ","

        "comment empty lines as well
        let g:NERDCommentEmptyLines=1

        " Align line-wise comment delimiters flush left instead of following code indentation
        let g:NERDDefaultAlign = 'left'




"===============
"=== INDENT LINE
"===============

        let g:indentLine_char = '|'
        "let g:intentLine_setColors = 0
        let g:indentLine_color_term = 'darkgrey'




"==================
" === NERDTREE
"==================

        map <C-n> :NERDTreeToggle<CR>



"==================
" === YouCompleteMe
"==================

        " made this file myself. Sources: 
        " https://github.com/rasendubi/dotfiles/blob/master/.vim/.ycm_extra_conf.py,
        " http://www.alexeyshmalko.com/2014/youcompleteme-ultimate-autocomplete-plugin-for-vim/
        let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/.ycm_extra_conf.py'

        let g:ycm_python_binary_path = '/usr/bin/python3'

        let g:ycm_auto_trigger = 1 "trigger after X characters





"====================
" === SimplyFold
"====================
        
        "let g:SimplyFold_docstring_preview=1





"====================
" === FastFold
"====================

        nmap zuz <Plug>(FastFoldUpdate)
        let g:fastfold_savehook = 1
        let g:fastfold_fold_command_suffixes =  ['x','X','a','A','o','O','c','C']
        let g:fastfold_fold_movement_commands = [']z', '[z', 'zj', 'zk']




        

