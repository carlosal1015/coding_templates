"==========================================================
"=== PLUGINS ==============================================
"==========================================================
"
"===========================
"VUNDLE - vim Plugin manager
"===========================

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'       "vundle - vim plugin manager

Plugin 'scrooloose/nerdcommenter'   "sexy commenting

Plugin 'Yggdroot/indentLine' "indentation lines for loops :)

"" All of your Plugins must be added before the following line

"" The following are examples of different formats supported.
"" Keep Plugin commands between vundle#begin/end.
"" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
"" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
"" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
"" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
"" The sparkup vim script is in a subdirectory of this repo called vim.
"" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
"" Install L9 and avoid a Naming conflict if you've already installed a
"" different version somewhere else.
"Plugin 'ascenator/L9', {'name': 'newL9'}
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ






"==================
" === NERDCOMMENTER
"==================

let mapleader = ","

"comment empty lines as well
let g:NERDCommentEmptyLines=1



"===============
"=== INDENT LINE
"===============

let g:indentLine_char = '|'





"==========================================================
"==========================================================

"=================
" COLORS
"=================

" Set solarised color scheme
syntax on
set t_Co=256 
set background=dark
"let g:solarized_termcolors=256
"return back to 16 for standard
colorscheme solarized

" Set highlight colors for brackets/braces/parenthesis matching
hi MatchParen cterm=bold ctermbg=none ctermfg=magenta



"=================
" GUI
"=================

"Line Numbers
set number
set relativenumber

" line wrap and other stuff
set linebreak
set wrap
set nolist

" line wrap with indent kept
set breakindent  

" moving along visual lines, not physical lines
noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj
noremap  <buffer> <silent> 0 g0
noremap  <buffer> <silent> $ g$


" STATUS LINE

" First define new highlight groups
"hi User1 ctermbg=223 ctermfg=23
hi User1 ctermbg=blue
" it uses the solarised colors if =none 
"guibg=green guifg=white for GUI, which I don't use...

" Now add what you want

set laststatus=2                "status line permanently on

set statusline=%*              "add personal highlighting
                                "specified in hi User1 ctermbg...
"set statusline+=%<\            " cut at start
"set statusline+=%t              "tail of the filename
"set statusline+=[%{strlen(&fenc)?&fenc:'none'}, "file encoding
"set statusline+=%{&ff}]        "file format
"set statusline+=%h             "help file flag
set statusline+=%m              "modified flag
set statusline+=%r              "read only flag
set statusline+=%-40f\                    " path
"set statusline+=%y             "filetype
set statusline+=%=              "left/right separator
set statusline+=Col\ %c,\       "cursor column
set statusline+=Lin\ %l/%L  "cursor line/total lines
set statusline+=\ %P        "percent through file 








"=================
" SEARCHING
"=================


" Ignoring case
set ignorecase

" Incremental searching
set incsearch

" Highlight things that we find with the search
set hlsearch







"=================
" VIM GENERAL
"=================

" Enable mouse support in console
set mouse=a

" set backup
set backup
set backupdir=~/.vim/backup
set directory=~/.vim/tmp

" Split screen navigation key mapping change
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" enable 'intelligent' pasting
set paste

" enable copypasting between sessions
set clipboard=unnamedplus

" make backspace work 'normally'
set backspace=indent,eol,start 



"=================
" SYNTAX AND TABS
"=================

" Needed for Syntax Highlighting and stuff
"filetype on " doesn't work with vundle
filetype plugin on "needed for plugins: nerdcommenter
filetype indent on "needed by  plugin slim
syntax enable
set grepprg=grep\ -nH\ $*

" Who doesn't like autoindent?
set autoindent

" tab configs
set tabstop=2
set expandtab
set shiftwidth=4

" tab and backspace are smart
set smarttab                  

" Fortran highlighting
let fortran_free_source=1
let fortran_have_tabs=1
let fortran_more_precise=1
let fortran_do_enddo=1
"=================
"=================



"=================
"=================







